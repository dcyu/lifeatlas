# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module Evs
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?auth_scheme_preference: Array[String],
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_checksum_calculation: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?response_checksum_validation: String,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateEnvironmentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEnvironmentResponse]
        def environment: () -> Types::Environment
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#create_environment-instance_method
      def create_environment: (
                                ?client_token: ::String,
                                ?environment_name: ::String,
                                ?kms_key_id: ::String,
                                ?tags: Hash[::String, ::String],
                                ?service_access_security_groups: {
                                  security_groups: Array[::String]?
                                },
                                vpc_id: ::String,
                                service_access_subnet_id: ::String,
                                vcf_version: ("VCF-5.2.1"),
                                terms_accepted: bool,
                                license_info: Array[
                                  {
                                    solution_key: ::String,
                                    vsan_key: ::String
                                  },
                                ],
                                initial_vlans: {
                                  vmk_management: {
                                    cidr: ::String
                                  },
                                  vm_management: {
                                    cidr: ::String
                                  },
                                  v_motion: {
                                    cidr: ::String
                                  },
                                  v_san: {
                                    cidr: ::String
                                  },
                                  v_tep: {
                                    cidr: ::String
                                  },
                                  edge_v_tep: {
                                    cidr: ::String
                                  },
                                  nsx_uplink: {
                                    cidr: ::String
                                  },
                                  hcx: {
                                    cidr: ::String
                                  },
                                  expansion_vlan_1: {
                                    cidr: ::String
                                  },
                                  expansion_vlan_2: {
                                    cidr: ::String
                                  }
                                },
                                hosts: Array[
                                  {
                                    host_name: ::String,
                                    key_name: ::String,
                                    instance_type: ("i4i.metal"),
                                    placement_group_id: ::String?,
                                    dedicated_host_id: ::String?
                                  },
                                ],
                                connectivity_info: {
                                  private_route_server_peerings: Array[::String]
                                },
                                vcf_hostnames: {
                                  v_center: ::String,
                                  nsx: ::String,
                                  nsx_manager_1: ::String,
                                  nsx_manager_2: ::String,
                                  nsx_manager_3: ::String,
                                  nsx_edge_1: ::String,
                                  nsx_edge_2: ::String,
                                  sddc_manager: ::String,
                                  cloud_builder: ::String
                                },
                                site_id: ::String
                              ) -> _CreateEnvironmentResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEnvironmentResponseSuccess

      interface _CreateEnvironmentHostResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEnvironmentHostResponse]
        def environment_summary: () -> Types::EnvironmentSummary
        def host: () -> Types::Host
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#create_environment_host-instance_method
      def create_environment_host: (
                                     ?client_token: ::String,
                                     environment_id: ::String,
                                     host: {
                                       host_name: ::String,
                                       key_name: ::String,
                                       instance_type: ("i4i.metal"),
                                       placement_group_id: ::String?,
                                       dedicated_host_id: ::String?
                                     }
                                   ) -> _CreateEnvironmentHostResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEnvironmentHostResponseSuccess

      interface _DeleteEnvironmentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteEnvironmentResponse]
        def environment: () -> Types::Environment
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#delete_environment-instance_method
      def delete_environment: (
                                ?client_token: ::String,
                                environment_id: ::String
                              ) -> _DeleteEnvironmentResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteEnvironmentResponseSuccess

      interface _DeleteEnvironmentHostResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteEnvironmentHostResponse]
        def environment_summary: () -> Types::EnvironmentSummary
        def host: () -> Types::Host
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#delete_environment_host-instance_method
      def delete_environment_host: (
                                     ?client_token: ::String,
                                     environment_id: ::String,
                                     host_name: ::String
                                   ) -> _DeleteEnvironmentHostResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteEnvironmentHostResponseSuccess

      interface _GetEnvironmentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetEnvironmentResponse]
        def environment: () -> Types::Environment
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#get_environment-instance_method
      def get_environment: (
                             environment_id: ::String
                           ) -> _GetEnvironmentResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetEnvironmentResponseSuccess

      interface _ListEnvironmentHostsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEnvironmentHostsResponse]
        def next_token: () -> ::String
        def environment_hosts: () -> ::Array[Types::Host]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#list_environment_hosts-instance_method
      def list_environment_hosts: (
                                    ?next_token: ::String,
                                    ?max_results: ::Integer,
                                    environment_id: ::String
                                  ) -> _ListEnvironmentHostsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEnvironmentHostsResponseSuccess

      interface _ListEnvironmentVlansResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEnvironmentVlansResponse]
        def next_token: () -> ::String
        def environment_vlans: () -> ::Array[Types::Vlan]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#list_environment_vlans-instance_method
      def list_environment_vlans: (
                                    ?next_token: ::String,
                                    ?max_results: ::Integer,
                                    environment_id: ::String
                                  ) -> _ListEnvironmentVlansResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEnvironmentVlansResponseSuccess

      interface _ListEnvironmentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEnvironmentsResponse]
        def next_token: () -> ::String
        def environment_summaries: () -> ::Array[Types::EnvironmentSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#list_environments-instance_method
      def list_environments: (
                               ?next_token: ::String,
                               ?max_results: ::Integer,
                               ?state: Array[("CREATING" | "CREATED" | "DELETING" | "DELETED" | "CREATE_FAILED")]
                             ) -> _ListEnvironmentsResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEnvironmentsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Hash[::String, ::String]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Evs/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess
    end
  end
end

